akka {
  actor {
    provider = "akka.cluster.ClusterActorRefProvider"
  }
  remote {
    netty.tcp {
      hostname = "127.0.0.1"
      port = 2552
    }
  }

  //这个配置的作用：由于集群中可以包含任意数量的节点，我们可能不知道所有节点的地址。
  // 尤其是部署在云端的时候，部署的拓扑 和 IP 地址可能经常变化。
  //还好我们有 gossip 协议，只要知道几个节点的位置就可以解决这个问题了。大多数技术（比如 Cassandra 和 Akka）
  // 把这些节点称作种子节点。除了知道它们的访问地址外， 种子节点并无其他特殊之处。
  // 当一个新节点加 入集群时，该节点会尝试连接第一个种子节点。如果成功连接种子节点，新节点就会发布其地址（主机和端口）。
  // 种子节点会负责通过 gossip 协议将新节点的地址最终通知整个集群。如果连接第一个种子节点失败，新节点就会尝试连接第二个种子节点。
  // 只要成功 连接任何一个种子节点，那么任何节点加入或离开集群时，我们都不需要对配置进行任何修改。厉害！
  cluster {
    seed-nodes = [
      "akka.tcp://Akkademy@127.0.0.1:2552",
      "akka.tcp://Akkademy@127.0.0.1:2551"
    ]
  }

  //书,
  //加上这个依赖，就会在服务器上启动 ClusterReceptionist，负责处理客户端与集群之间的通信细节。
  //服务器上创建 ClusterReceptionistActor 的路径是 /user/receptionist。这个actor就是客户端连接的actor...
  //也就是说加上这个actor，就会自动启动 ClusterReceptionistActor 这个actor
  //extensions = ["akka.contrib.pattern.ClusterReceptionistExtension"]

  //github
  akka.extensions = ["akka.cluster.client.ClusterClientReceptionist"]
}